name: Kustomization
on: 
  push:
    branches:
      - main
  pull_request:

jobs:
  run:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}
      # Initialize a new or existing Terraform working directory by creating initial files, loading any remote state, downloading modules, etc.
      - name: Terraform Init
        id: init
        run: terraform init

      # Checks that all Terraform configuration files adhere to a canonical format
      - name: Terraform Format
        id: fmt
        run: terraform fmt -check
      # Validates the configuration used in the GitHub action workflow.
      - name: Terraform Validate
        id: validate
        run: terraform validate -no-color
      # Generates an execution plan for Terraform
      - name: Terraform Plan
        id: plan
        if: github.event_name == 'pull_request'
        run: terraform plan -no-color
        continue-on-error: true

      - name: Update Pull Request
        uses: actions/github-script@0.9.0
        if: github.event_name == 'pull_request'
        env:
          PLAN: "terraform\n${{ steps.plan.outputs.stdout }}"
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const output = `#### Terraform Format and Style üñå\`${{ steps.fmt.outcome }}\`
            #### Terraform Initialization ‚öôÔ∏è\`${{ steps.init.outcome }}\`
            #### Terraform Plan üìñ\`${{ steps.plan.outcome }}\`
            #### Terraform Validation ü§ñ\`${{ steps.validate.outcome }}\`

            <details><summary>Show Plan</summary>

            \`\`\`\n
            ${process.env.PLAN}
            \`\`\`

            </details>

            *Pusher: @${{ github.actor }}, Action: \`${{ github.event_name }}\`*`;

            github.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: output
            })
      # Terraform plan status
      - name: Terraform Plan Status
        if: steps.plan.outcome == 'failure'
        run: exit 1
      # Generates an execution apply for Terraform
      - name: Terraform apply
        run: terraform apply --auto-approve
      - name: Commit changes
        uses: EndBug/add-and-commit@v8
        with:
          author_name: imamajonov
          author_email: m.prod78@gmail.com
          message: 'Commit from github actions Terraform'
          add: |
            "kustomization.yaml" 
            "./insiderdocs/insiderdocs-kustomization.yaml"
            "./es-snapshot/es-napshot-kustomization.yaml"